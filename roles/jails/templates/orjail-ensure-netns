#!/bin/bash
set -e

INDEX=$1

IPHOST=10.200.${INDEX}.2
IPNETNS=10.200.${INDEX}.1
NETMASK=30
TRANSPORT=904${INDEX}
DNSPORT=535${INDEX}
NAME=orjail${INDEX}

if ! ip netns list | grep \\b"$NAME"\\b; then
  echo " * $IPHOST <---> $IPNETNS"
  echo " * Creating a $NAME namespace..."

  # add network namespace
  ip netns add "$NAME"

  # Create veth link.
  echo " * Creating a veth link..."
  ip link add "in-$NAME" type veth peer name "out-$NAME"

  # Add out to NS.
  echo " * Sharing the veth interface..."
  ip link set "out-$NAME" netns "$NAME"

  ## setup ip address of host interface
  echo " * Setting up IP address of host interface ($IPHOST/$NETMASK)"
  ip addr add "$IPHOST/$NETMASK" dev "in-$NAME"
    ip link set "in-$NAME" up

  # setup ip address of peer
  echo " * Setting up IP address of peer interface ($IPNETNS/$NETMASK)"
  ip netns exec "$NAME" ip addr add "$IPNETNS/$NETMASK" dev "out-$NAME"
  ip netns exec "$NAME" ip link set "out-$NAME" up

  # default route
  echo " * Default routing up..."
  ip netns exec "$NAME" ip route add default via "$IPHOST"

  # bring loopback interface up inside sandbox
  echo " * Bringing orjail loopback up..."
  ip netns exec "$NAME" ip link set lo up

  # resolve with tor
  echo " * Resolving via Tor"
  iptables -t nat -A  PREROUTING -i "in-$NAME" -p udp -d "$IPHOST" --dport 53 -j DNAT \
        --to-destination "$IPHOST":"$DNSPORT"

  # traffic througth tor
  echo " * Traffic via Tor..."
  iptables -t nat -A  PREROUTING -i "in-$NAME" -p tcp --syn -j DNAT \
            --to-destination "$IPHOST":"$TRANSPORT"
  iptables -A OUTPUT -m state -o "in-$NAME" --state ESTABLISHED,RELATED -j ACCEPT

  # REJECT all traffic coming from orjail
  # this is needed to avoid reaching other interfaces
  iptables -I INPUT -i "in-$NAME" -p udp --destination "$IPHOST" --dport "$DNSPORT" -j ACCEPT
  iptables -I INPUT -i "in-$NAME" -p tcp --destination "$IPHOST" --dport "$TRANSPORT" -j ACCEPT

  # while we inserted the rules above, the DROP rule must be appended instead
  iptables -A INPUT -i "in-$NAME" -j DROP

  # disable forwarding (no packets from here should be forwarded!)
  iptables -I FORWARD -i "in-$NAME" -j DROP
  iptables -I FORWARD -o "in-$NAME" -j DROP

  sysctl -w -q "net.ipv4.conf.in-$NAME".forwarding=0

  # everything coming/redirected from orjail does not have to reach any other interface
  iptables -t nat -I POSTROUTING 1 \! -o "in-$NAME" -s "$IPHOST/$NETMASK" -j RETURN
  iptables -t nat -I PREROUTING 1 \! -i "in-$NAME" -d "$IPHOST/$NETMASK" -j RETURN

  # prevent port redirection to be made in orjail
  iptables -t nat -A PREROUTING -i "in-$NAME" -j RETURN

  # prevent external traffic to reach orjail
  iptables -A INPUT ! -i "in-$NAME" -s "$IPHOST/$NETMASK" -j DROP
  iptables -A INPUT ! -i "in-$NAME" -d "$IPHOST/$NETMASK" -j DROP

fi
