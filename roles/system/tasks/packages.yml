---
# enable multilib for 32bit apps
- name: Check whether /etc/pacman.conf already contains a multilib configuration
  command: grep -xqE "^\[multilib\]" /etc/pacman.conf
  register: multilib_enabled
  check_mode: no
  ignore_errors: yes
  changed_when: no

- name: Enable multilib repository
  when: multilib_enabled.rc != 0
  ansible.builtin.blockinfile:
    path: /etc/pacman.conf
    block: |
      [multilib]
      SigLevel = PackageRequired
      Include = /etc/pacman.d/mirrorlist

# install base packages
- name: make sure conflicting packages are not installed
  community.general.pacman:
    name:
      - pulseaudio
      - pipewire-media-session
    update_cache: yes
    state: absent
    force: yes

- name: install base packages
  community.general.pacman:
    name: "{{ system_base_packages }}"
    update_cache: yes
    state: present

- name: install amd drivers
  community.general.pacman:
    name: "{{ system_amd_packages }}"
    update_cache: yes
    state: present
  when: system_platform == "amd"

- name: install intel drivers
  community.general.pacman:
    name: "{{ system_intel_packages }}"
    update_cache: yes
    state: present
  when: system_platform == "intel"

# dev packages
- name: install development packages
  community.general.pacman:
    name: "{{ system_development_packages }}"
    update_cache: yes
    state: present

# install applications
- name: install applications
  community.general.pacman:
    name: "{{ system_applications }}"
    state: present

- name: install pacman-contrib
  community.general.pacman:
    name: pacman-contrib
    state: present

- name: Enable and start pacman cache cleanup timer
  ansible.builtin.service:
    name: paccache.timer
    state: started
    enabled: yes

- name: Enable color output in pacman
  ansible.builtin.lineinfile:
    path: /etc/pacman.conf
    regexp: '^#?Color'
    line: "Color"

- name: Enable parallel downloads in pacman
  ansible.builtin.lineinfile:
    path: /etc/pacman.conf
    regexp: '^#?ParallelDownloads'
    line: "ParallelDownloads = 5"

# Mirrorlist updates via reflector
- name: copy reflector config file
  when: "'reflector' in system_base_packages"
  ansible.builtin.template:
    src: "reflector/reflector.conf.j2"
    dest: "/etc/xdg/reflector/reflector.conf"

- name: Enable reflector service for mirrorlist updates on boot
  when: "'reflector' in system_base_packages"
  ansible.builtin.service:
    name: reflector.timer
    state: started
    enabled: yes

# AUR
- name: Create the `aur_builder` user
  ansible.builtin.user:
    name: aur_builder
    create_home: yes
    group: wheel

- name: Allow the `aur_builder` user to run `sudo pacman` without a password
  ansible.builtin.lineinfile:
    path: /etc/sudoers.d/11-install-aur_builder
    line: 'aur_builder ALL=(ALL) NOPASSWD: /usr/bin/pacman'
    create: yes
    mode: 0644
    validate: 'visudo -cf %s'

- name: Install AUR packages
  kewlfft.aur.aur:
    name: "{{ system_aur_packages }}"
  become: yes
  become_user: aur_builder
  tags:
    - aur

# electron wayland
- name: Enable wayland for electron >=28
  ansible.builtin.copy:
    src: etc/profile.d/electron-wayland.sh
    dest: /etc/profile.d/electron-wayland.sh
    mode: '0644'
